# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.5 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C++ compiler 
CXX = wpp386

# Standard flags for C++ 
CXXFLAGS = 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS = 

# Standard linker flags 
LDFLAGS = 

# Set to 1 to build debug version [0,1]
#   0 - Release
#   1 - Debug
DEBUG = 0

#  
GPIB = 0

#  
WXDIR = $(%WXWIN)

#  
INSTALLDIR = $(%WXWIN)



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

# Speed up compilation a bit:
!ifdef __LOADDLL__
!  loaddll wcc      wccd
!  loaddll wccaxp   wccdaxp
!  loaddll wcc386   wccd386
!  loaddll wpp      wppdi86
!  loaddll wppaxp   wppdaxp
!  loaddll wpp386   wppd386
!  loaddll wlink    wlink
!  loaddll wlib     wlibd
!endif

# We need these variables in some bakefile-made rules:
WATCOM_CWD = $+ $(%cdrive):$(%cwd) $-

### Conditionally set variables: ###

OUTPUT =
!ifeq DEBUG 0
OUTPUT = release
!endif
!ifeq DEBUG 1
OUTPUT = debug
!endif
INSTALLDIR =
!ifeq WXDIR
INSTALLDIR = ..\lib
!endif
LIBFLAG =
!ifeq DEBUG 1
LIBFLAG = d
!endif
GPIBFLAG =
!ifeq GPIB 1
GPIBFLAG = _gpib
!endif
____GPIBSRC_FILENAMES_OBJECTS =
!ifeq GPIB 1
____GPIBSRC_FILENAMES_OBJECTS =  &
	$(OUTPUT)\ctb_lib_gpib.obj
!endif
____GPIBSRC_FILENAMES_1_OBJECTS =
!ifeq GPIB 1
____GPIBSRC_FILENAMES_1_OBJECTS =  &
	$(OUTPUT)\ctb_dll_gpib.obj
!endif
____DEBUG =
!ifeq DEBUG 0
____DEBUG = -dNDEBUG
!endif
!ifeq DEBUG 1
____DEBUG = 
!endif
____DEBUG_0 =
!ifeq DEBUG 0
____DEBUG_0 = -d0
!endif
!ifeq DEBUG 1
____DEBUG_0 = -d2
!endif
____DEBUG_2 =
!ifeq DEBUG 0
____DEBUG_2 = 
!endif
!ifeq DEBUG 1
____DEBUG_2 = debug all
!endif
__OPTIMIZE_FLAG =
!ifeq DEBUG 0
__OPTIMIZE_FLAG = -od
!endif
!ifeq DEBUG 1
__OPTIMIZE_FLAG = -ot -ox
!endif
__SYSLIB2_p =
!ifeq GPIB 1
__SYSLIB2_p = gpib32.lib
!endif

### Variables: ###

CTB_LIB_CXXFLAGS = $(____DEBUG) $(____DEBUG_0) -bm $(__OPTIMIZE_FLAG) &
	-i=..\include $(CPPFLAGS) $(CXXFLAGS)
CTB_LIB_OBJECTS =  &
	$(OUTPUT)\ctb_lib_fifo.obj &
	$(OUTPUT)\ctb_lib_getopt.obj &
	$(OUTPUT)\ctb_lib_iobase.obj &
	$(OUTPUT)\ctb_lib_portscan.obj &
	$(OUTPUT)\ctb_lib_serportx.obj &
	$(OUTPUT)\ctb_lib_serport.obj &
	$(OUTPUT)\ctb_lib_timer.obj &
	$(____GPIBSRC_FILENAMES_OBJECTS)
CTB_DLL_CXXFLAGS = -bd $(____DEBUG) $(____DEBUG_0) -bm $(__OPTIMIZE_FLAG) &
	-i=..\include $(CPPFLAGS) $(CXXFLAGS)
CTB_DLL_OBJECTS =  &
	$(OUTPUT)\ctb_dll_fifo.obj &
	$(OUTPUT)\ctb_dll_getopt.obj &
	$(OUTPUT)\ctb_dll_iobase.obj &
	$(OUTPUT)\ctb_dll_portscan.obj &
	$(OUTPUT)\ctb_dll_serportx.obj &
	$(OUTPUT)\ctb_dll_serport.obj &
	$(OUTPUT)\ctb_dll_timer.obj &
	$(____GPIBSRC_FILENAMES_1_OBJECTS)
CTBTEST_CXXFLAGS = $(____DEBUG) $(____DEBUG_0) -dGPIB=$(GPIB) -bm &
	$(__OPTIMIZE_FLAG) -i=..\include $(CPPFLAGS) $(CXXFLAGS)
CTBTEST_OBJECTS =  &
	$(OUTPUT)\ctbtest_ctbtest.obj


all : $(OUTPUT)
$(OUTPUT) :
	-if not exist $(OUTPUT) mkdir $(OUTPUT)

### Targets: ###

all : .SYMBOLIC ..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.lib ..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.dll $(OUTPUT)\ctbtest.exe tip-win32

clean : .SYMBOLIC 
	-if exist $(OUTPUT)\*.obj del $(OUTPUT)\*.obj
	-if exist $(OUTPUT)\*.res del $(OUTPUT)\*.res
	-if exist $(OUTPUT)\*.lbc del $(OUTPUT)\*.lbc
	-if exist $(OUTPUT)\*.ilk del $(OUTPUT)\*.ilk
	-if exist $(OUTPUT)\*.pch del $(OUTPUT)\*.pch
	-if exist ..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.lib del ..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.lib
	-if exist ..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.dll del ..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.dll
	-if exist ..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.lib del ..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.lib
	-if exist $(OUTPUT)\ctbtest.exe del $(OUTPUT)\ctbtest.exe

..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.lib :  $(CTB_LIB_OBJECTS)
	@%create $(OUTPUT)\ctb_lib.lbc
	@for %i in ($(CTB_LIB_OBJECTS)) do @%append $(OUTPUT)\ctb_lib.lbc +%i
	wlib -q -p4096 -n -b $^@ @$(OUTPUT)\ctb_lib.lbc

..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.dll :  $(CTB_DLL_OBJECTS)
	@%create $(OUTPUT)\ctb_dll.lbc
	@%append $(OUTPUT)\ctb_dll.lbc option quiet
	@%append $(OUTPUT)\ctb_dll.lbc name $^@
	@%append $(OUTPUT)\ctb_dll.lbc option caseexact
	@%append $(OUTPUT)\ctb_dll.lbc  $(____DEBUG_2)  libpath ..\lib $(LDFLAGS)
	@for %i in ($(CTB_DLL_OBJECTS)) do @%append $(OUTPUT)\ctb_dll.lbc file %i
	@for %i in ( winmm.lib $(__SYSLIB2_p)) do @%append $(OUTPUT)\ctb_dll.lbc library %i
	@%append $(OUTPUT)\ctb_dll.lbc
	@%append $(OUTPUT)\ctb_dll.lbc system nt_dll
	wlink @$(OUTPUT)\ctb_dll.lbc
	wlib -q -n -b ..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.lib +$^@

$(OUTPUT)\ctbtest.exe :  $(CTBTEST_OBJECTS) ..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.lib
	@%create $(OUTPUT)\ctbtest.lbc
	@%append $(OUTPUT)\ctbtest.lbc option quiet
	@%append $(OUTPUT)\ctbtest.lbc name $^@
	@%append $(OUTPUT)\ctbtest.lbc option caseexact
	@%append $(OUTPUT)\ctbtest.lbc  $(____DEBUG_2)  libpath ..\lib $(LDFLAGS)
	@for %i in ($(CTBTEST_OBJECTS)) do @%append $(OUTPUT)\ctbtest.lbc file %i
	@for %i in ( ..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.lib winmm.lib $(__SYSLIB2_p)) do @%append $(OUTPUT)\ctbtest.lbc library %i
	@%append $(OUTPUT)\ctbtest.lbc
	@for %i in () do @%append $(OUTPUT)\ctbtest.lbc option stack=%i
	wlink @$(OUTPUT)\ctbtest.lbc

wxinstall :  
	@copy ..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.lib $(INSTALLDIR)\lib\watcom_lib
	@copy ..\lib\ctb$(LIBFLAG)$(GPIBFLAG)-0.16.dll $(INSTALLDIR)\lib\watcom_lib
	
	@if not exist $(INSTALLDIR)\include\ctb-0.16\win32 mkdir $(INSTALLDIR)\include\ctb-0.16\win32
	@copy ..\include\ctb-0.16\*.h $(INSTALLDIR)\include\ctb-0.16
	@copy ..\include\ctb-0.16\win32\*.h $(INSTALLDIR)\include\ctb-0.16\win32

tip-win32 :  
	@echo "                                                                "
	@echo "================================================================"
	@echo " The building of ctb is finished. If you have an installed    "
	@echo " wxWidget package (WXWIN must be defined in the enviroment),    "
	@echo " you'll now have to run:                                        "
	@echo "                                                                "
	@echo " make DEBUG=$(DEBUG) GPIB=$(GPIB) wxinstall                     "
	@echo "                                                                "
	@echo " to install the libraries in:                                   "
	@echo " $(INSTALLDIR)\lib\watcom_lib               "
	@echo " and the header files in"
	@echo " $(INSTALLDIR)\ctb-0.16"
	@echo "                                                                "
	@echo " If you are using another compiler (Borland, Watcom, mingw,...) "
	@echo " take a look in the README in this directory!                   "
	@echo "                                                                "
	@echo " ctb comes with no guarantees and doesn't claim               "
	@echo " to be suitable for any purpose.                                "
	@echo "================================================================"
	@echo "                                                                "

$(OUTPUT)\ctb_lib_fifo.obj :  .AUTODEPEND .\..\src\fifo.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_LIB_CXXFLAGS) $<

$(OUTPUT)\ctb_lib_getopt.obj :  .AUTODEPEND .\..\src\getopt.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_LIB_CXXFLAGS) $<

$(OUTPUT)\ctb_lib_iobase.obj :  .AUTODEPEND .\..\src\iobase.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_LIB_CXXFLAGS) $<

$(OUTPUT)\ctb_lib_portscan.obj :  .AUTODEPEND .\..\src\portscan.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_LIB_CXXFLAGS) $<

$(OUTPUT)\ctb_lib_serportx.obj :  .AUTODEPEND .\..\src\serportx.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_LIB_CXXFLAGS) $<

$(OUTPUT)\ctb_lib_serport.obj :  .AUTODEPEND .\..\src\win32\serport.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_LIB_CXXFLAGS) $<

$(OUTPUT)\ctb_lib_timer.obj :  .AUTODEPEND .\..\src\win32\timer.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_LIB_CXXFLAGS) $<

$(OUTPUT)\ctb_lib_gpib.obj :  .AUTODEPEND .\..\src\gpib.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_LIB_CXXFLAGS) $<

$(OUTPUT)\ctb_dll_fifo.obj :  .AUTODEPEND .\..\src\fifo.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_DLL_CXXFLAGS) $<

$(OUTPUT)\ctb_dll_getopt.obj :  .AUTODEPEND .\..\src\getopt.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_DLL_CXXFLAGS) $<

$(OUTPUT)\ctb_dll_iobase.obj :  .AUTODEPEND .\..\src\iobase.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_DLL_CXXFLAGS) $<

$(OUTPUT)\ctb_dll_portscan.obj :  .AUTODEPEND .\..\src\portscan.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_DLL_CXXFLAGS) $<

$(OUTPUT)\ctb_dll_serportx.obj :  .AUTODEPEND .\..\src\serportx.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_DLL_CXXFLAGS) $<

$(OUTPUT)\ctb_dll_serport.obj :  .AUTODEPEND .\..\src\win32\serport.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_DLL_CXXFLAGS) $<

$(OUTPUT)\ctb_dll_timer.obj :  .AUTODEPEND .\..\src\win32\timer.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_DLL_CXXFLAGS) $<

$(OUTPUT)\ctb_dll_gpib.obj :  .AUTODEPEND .\..\src\gpib.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTB_DLL_CXXFLAGS) $<

$(OUTPUT)\ctbtest_ctbtest.obj :  .AUTODEPEND .\..\samples\ctbtest.cpp
	$(CXX) -bt=nt -zq -fo=$^@ $(CTBTEST_CXXFLAGS) $<

